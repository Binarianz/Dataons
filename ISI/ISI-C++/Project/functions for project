void hangmanAscii(int height)
{
	string hangManAscii[19];
	hangManAscii[0] = "|         |\n";
	hangManAscii[1] = "|         0\n";
	hangManAscii[2] = "|        /";
	hangManAscii[3] = "|";
	hangManAscii[4] = "\\  \n";
	hangManAscii[5] = "|        /";
	hangManAscii[6] = " \\  \n";
	for (int i = 0; i <= height; i++)
	{
		cout << hangManAscii[i];
	}
}



///////////////////////////////////////////////////////////////////////////////////////
string getMasterWord()
{
    string line;
    int randomNumber, rLine = 0, stringLength = 0;
    srand(time(NULL));
    randomNumber = rand() % 20;
    ifstream myfile("words.txt");
    if (myfile.is_open())
    {
        while (getline(myfile, line))
        {
            ++rLine;
            if (randomNumber == rLine)
            {
                return line;
            }
        }
        myfile.close();
    }

    else
        cout << "Unable to open file";
    return line;
	
	
	//////////////////////////////////////////////////////////////////////////////////////
	
	string guessCheck(string masterWord, string guessWord, string currrentWord)
{
	//
	if (guessWord.length() == 1)
	{
		for (int i = 0; i <masterWord.size(); i++)
		{

			if (masterWord[i] == guessWord[0])
			{
				currrentWord[i] = guessWord[0];
			}
			else
			{
				if (currrentWord[i] == '_')
				{
					currrentWord[i] = '_';
				}
				
			}
		}
	}
	else if (masterWord.compare(guessWord) == 0)
	{
		currrentWord = masterWord;
	}
	return currrentWord;
}
}

////////////////////////////////////////////////////////////////////////////////////////