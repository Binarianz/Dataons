package com.isi.boat.Controllers;
//import com.isi.boat.interfaces.ICounterController;
//import com.isi.boat.interfaces.ICounterListener;
//import com.isi.boat.models.Counter;

import com.isi.boat.Models.BoatModel;
import com.isi.boat.Views.MasterPanel;
import com.isi.boat.interfaces.IBoatListener;

public class BoatController implements IBoatListener{

	private BoatModel model;//model
	private IBoatListener window;//view
	
	public BoatController( BoatModel model,MasterPanel window)
	{
		this.model=model;
		this.window=window;
		updateView();
	}

	private void updateView() {
		//window.setvlaue, //TODO_
		
	}
	public void start()
	{
		if(model.boatStart())
			window.updateMessageText("Boat is starting");
		else {
			window.updateMessageText("Boat cannot start, its already stated");
		}
	}
	public void stop()
	{
		if(model.boatStop())
			window.updateMessageText("Boat is stoped");
		else {
			window.updateMessageText("Boat cannot stop, its already stoped");
		}
	}
	public void changeDirection(int direction)
	{
		if(model.changeDirection(direction))
			window.updateMessageText("Boat is moving in  "+model.getBoatDirection());
		else {
			window.updateMessageText("Boat cannot change direction");
		}
	}
	public void setVelocity(int velocity)
	{
		model.setVelocity(velocity);
		window.updateMessageText("Boat is setting velocity to "+ velocity);
		//updateVelocity();		// Unnecessary with active model
	}

	@Override
	public void updateVelocity(int velocity) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void updateFuelValue(int fuelValue) {
		window.updateFuelValue(fuelValue);
		// TODO Auto-generated method stub
		
	}
}
